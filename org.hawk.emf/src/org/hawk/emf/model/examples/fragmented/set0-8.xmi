<?xml version="1.0" encoding="ASCII"?>
<dom:TypeDeclaration xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dom="org.amma.dsl.jdt.dom" localTypeDeclaration="false" memberTypeDeclaration="false" packageMemberTypeDeclaration="true" interface="false">
  <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
  <javadoc>
    <tags nested="false">
      <fragments xsi:type="dom:TextElement" text="Implementation of JavaFileObject used for Java 6 annotation processing within the IDE."/>
      <fragments xsi:type="dom:TextElement" text="This object is used only for writing source and class files."/>
    </tags>
    <tags tagName="@since" nested="false">
      <fragments xsi:type="dom:TextElement" text=" 3.3"/>
    </tags>
  </javadoc>
  <bodyDeclarations xsi:type="dom:FieldDeclaration">
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="true" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <fragments extraDimensions="0">
      <name fullyQualifiedName="_env" identifier="_env" declaration="true"/>
    </fragments>
    <type xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeProcessingEnvImpl" identifier="IdeProcessingEnvImpl" declaration="false"/>
    </type>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:FieldDeclaration">
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="true" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <fragments extraDimensions="0">
      <name fullyQualifiedName="_name" identifier="_name" declaration="true"/>
    </fragments>
    <type xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="CharSequence" identifier="CharSequence" declaration="false"/>
    </type>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:FieldDeclaration">
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="true" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <fragments extraDimensions="0">
      <name fullyQualifiedName="_parentFiles" identifier="_parentFiles" declaration="true"/>
    </fragments>
    <type xsi:type="dom:ParameterizedType">
      <type xsi:type="dom:SimpleType">
        <name xsi:type="dom:SimpleName" fullyQualifiedName="Collection" identifier="Collection" declaration="false"/>
      </type>
      <typeArguments xsi:type="dom:SimpleType">
        <name xsi:type="dom:SimpleName" fullyQualifiedName="IFile" identifier="IFile" declaration="false"/>
      </typeArguments>
    </type>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="true" varargs="false">
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ExpressionStatement">
        <expression xsi:type="dom:Assignment" operator="=">
          <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_env" identifier="_env" declaration="false"/>
          <rightHandSide xsi:type="dom:SimpleName" fullyQualifiedName="env" identifier="env" declaration="false"/>
        </expression>
      </statements>
      <statements xsi:type="dom:ExpressionStatement">
        <expression xsi:type="dom:Assignment" operator="=">
          <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_parentFiles" identifier="_parentFiles" declaration="false"/>
          <rightHandSide xsi:type="dom:SimpleName" fullyQualifiedName="parentFiles" identifier="parentFiles" declaration="false"/>
        </expression>
      </statements>
      <statements xsi:type="dom:ExpressionStatement">
        <expression xsi:type="dom:Assignment" operator="=">
          <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_name" identifier="_name" declaration="false"/>
          <rightHandSide xsi:type="dom:SimpleName" fullyQualifiedName="name" identifier="name" declaration="false"/>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="IdeOutputJavaFileObject" identifier="IdeOutputJavaFileObject" declaration="false"/>
    <parameters extraDimensions="0" varargs="false">
      <name fullyQualifiedName="env" identifier="env" declaration="true"/>
      <type xsi:type="dom:SimpleType">
        <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeProcessingEnvImpl" identifier="IdeProcessingEnvImpl" declaration="false"/>
      </type>
    </parameters>
    <parameters extraDimensions="0" varargs="false">
      <name fullyQualifiedName="name" identifier="name" declaration="true"/>
      <type xsi:type="dom:SimpleType">
        <name xsi:type="dom:SimpleName" fullyQualifiedName="CharSequence" identifier="CharSequence" declaration="false"/>
      </type>
    </parameters>
    <parameters extraDimensions="0" varargs="false">
      <name fullyQualifiedName="parentFiles" identifier="parentFiles" declaration="true"/>
      <type xsi:type="dom:ParameterizedType">
        <type xsi:type="dom:SimpleType">
          <name xsi:type="dom:SimpleName" fullyQualifiedName="Collection" identifier="Collection" declaration="false"/>
        </type>
        <typeArguments xsi:type="dom:SimpleType">
          <name xsi:type="dom:SimpleName" fullyQualifiedName="IFile" identifier="IFile" declaration="false"/>
        </typeArguments>
      </type>
    </parameters>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ThrowStatement">
        <expression xsi:type="dom:ClassInstanceCreation">
          <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;Not yet implemented&quot;"/>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="UnsupportedOperationException" identifier="UnsupportedOperationException" declaration="false"/>
          </type>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="getAccessLevel" identifier="getAccessLevel" declaration="true"/>
    <returnType xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="Modifier" identifier="Modifier" declaration="false"/>
    </returnType>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ThrowStatement">
        <expression xsi:type="dom:ClassInstanceCreation">
          <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;Not yet implemented&quot;"/>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="UnsupportedOperationException" identifier="UnsupportedOperationException" declaration="false"/>
          </type>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="getKind" identifier="getKind" declaration="true"/>
    <returnType xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="Kind" identifier="Kind" declaration="false"/>
    </returnType>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ReturnStatement">
        <expression xsi:type="dom:MethodInvocation">
          <expression xsi:type="dom:SimpleName" fullyQualifiedName="_name" identifier="_name" declaration="false"/>
          <name fullyQualifiedName="toString" identifier="toString" declaration="false"/>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="getName" identifier="getName" declaration="true"/>
    <returnType xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
    </returnType>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ThrowStatement">
        <expression xsi:type="dom:ClassInstanceCreation">
          <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;Not yet implemented&quot;"/>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="UnsupportedOperationException" identifier="UnsupportedOperationException" declaration="false"/>
          </type>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="getNestingKind" identifier="getNestingKind" declaration="true"/>
    <returnType xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="NestingKind" identifier="NestingKind" declaration="false"/>
    </returnType>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ThrowStatement">
        <expression xsi:type="dom:ClassInstanceCreation">
          <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;Not yet implemented&quot;"/>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="UnsupportedOperationException" identifier="UnsupportedOperationException" declaration="false"/>
          </type>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="isNameCompatible" identifier="isNameCompatible" declaration="true"/>
    <returnType xsi:type="dom:PrimitiveType" code="boolean"/>
    <parameters extraDimensions="0" varargs="false">
      <name fullyQualifiedName="simpleName" identifier="simpleName" declaration="true"/>
      <type xsi:type="dom:SimpleType">
        <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
      </type>
    </parameters>
    <parameters extraDimensions="0" varargs="false">
      <name fullyQualifiedName="kind" identifier="kind" declaration="true"/>
      <type xsi:type="dom:SimpleType">
        <name xsi:type="dom:SimpleName" fullyQualifiedName="Kind" identifier="Kind" declaration="false"/>
      </type>
    </parameters>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ReturnStatement">
        <expression xsi:type="dom:ClassInstanceCreation">
          <arguments xsi:type="dom:SimpleName" fullyQualifiedName="_env" identifier="_env" declaration="false"/>
          <arguments xsi:type="dom:SimpleName" fullyQualifiedName="_name" identifier="_name" declaration="false"/>
          <arguments xsi:type="dom:SimpleName" fullyQualifiedName="_parentFiles" identifier="_parentFiles" declaration="false"/>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeJavaSourceOutputStream" identifier="IdeJavaSourceOutputStream" declaration="false"/>
          </type>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="openOutputStream" identifier="openOutputStream" declaration="true"/>
    <returnType xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="OutputStream" identifier="OutputStream" declaration="false"/>
    </returnType>
    <thrownExceptions xsi:type="dom:SimpleName" fullyQualifiedName="IOException" identifier="IOException" declaration="false"/>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ReturnStatement">
        <expression xsi:type="dom:ClassInstanceCreation">
          <arguments xsi:type="dom:MethodInvocation">
            <name fullyQualifiedName="openOutputStream" identifier="openOutputStream" declaration="false"/>
          </arguments>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="PrintWriter" identifier="PrintWriter" declaration="false"/>
          </type>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="openWriter" identifier="openWriter" declaration="true"/>
    <returnType xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="Writer" identifier="Writer" declaration="false"/>
    </returnType>
    <thrownExceptions xsi:type="dom:SimpleName" fullyQualifiedName="IOException" identifier="IOException" declaration="false"/>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ThrowStatement">
        <expression xsi:type="dom:ClassInstanceCreation">
          <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;Not yet implemented&quot;"/>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="UnsupportedOperationException" identifier="UnsupportedOperationException" declaration="false"/>
          </type>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="toUri" identifier="toUri" declaration="true"/>
    <returnType xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="URI" identifier="URI" declaration="false"/>
    </returnType>
  </bodyDeclarations>
  <name fullyQualifiedName="IdeOutputJavaFileObject" identifier="IdeOutputJavaFileObject" declaration="true"/>
  <superclassType xsi:type="dom:SimpleType">
    <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeOutputFileObject" identifier="IdeOutputFileObject" declaration="false"/>
  </superclassType>
  <superInterfaceTypes xsi:type="dom:SimpleType">
    <name xsi:type="dom:SimpleName" fullyQualifiedName="JavaFileObject" identifier="JavaFileObject" declaration="false"/>
  </superInterfaceTypes>
</dom:TypeDeclaration>
