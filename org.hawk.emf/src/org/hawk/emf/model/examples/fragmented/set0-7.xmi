<?xml version="1.0" encoding="ASCII"?>
<dom:TypeDeclaration xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dom="org.amma.dsl.jdt.dom" localTypeDeclaration="false" memberTypeDeclaration="false" packageMemberTypeDeclaration="true" interface="false">
  <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
  <javadoc>
    <tags nested="false">
      <fragments xsi:type="dom:TextElement" text="OutputStream used by the IdeFilerImpl to generate Java source files."/>
    </tags>
    <tags tagName="@since" nested="false">
      <fragments xsi:type="dom:TextElement" text=" 3.3"/>
    </tags>
  </javadoc>
  <bodyDeclarations xsi:type="dom:FieldDeclaration">
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="true" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <fragments extraDimensions="0">
      <name fullyQualifiedName="_env" identifier="_env" declaration="true"/>
    </fragments>
    <type xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeProcessingEnvImpl" identifier="IdeProcessingEnvImpl" declaration="false"/>
    </type>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:FieldDeclaration">
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="true" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <fragments extraDimensions="0">
      <name fullyQualifiedName="_name" identifier="_name" declaration="true"/>
    </fragments>
    <type xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="CharSequence" identifier="CharSequence" declaration="false"/>
    </type>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:FieldDeclaration">
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="true" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <fragments extraDimensions="0">
      <name fullyQualifiedName="_parentFiles" identifier="_parentFiles" declaration="true"/>
    </fragments>
    <type xsi:type="dom:ParameterizedType">
      <type xsi:type="dom:SimpleType">
        <name xsi:type="dom:SimpleName" fullyQualifiedName="Collection" identifier="Collection" declaration="false"/>
      </type>
      <typeArguments xsi:type="dom:SimpleType">
        <name xsi:type="dom:SimpleName" fullyQualifiedName="IFile" identifier="IFile" declaration="false"/>
      </typeArguments>
    </type>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:FieldDeclaration">
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <fragments extraDimensions="0">
      <initializer xsi:type="dom:BooleanLiteral" booleanValue="false"/>
      <name fullyQualifiedName="_closed" identifier="_closed" declaration="true"/>
    </fragments>
    <type xsi:type="dom:PrimitiveType" code="boolean"/>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="true" varargs="false">
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ExpressionStatement">
        <expression xsi:type="dom:Assignment" operator="=">
          <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_env" identifier="_env" declaration="false"/>
          <rightHandSide xsi:type="dom:SimpleName" fullyQualifiedName="env" identifier="env" declaration="false"/>
        </expression>
      </statements>
      <statements xsi:type="dom:ExpressionStatement">
        <expression xsi:type="dom:Assignment" operator="=">
          <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_name" identifier="_name" declaration="false"/>
          <rightHandSide xsi:type="dom:SimpleName" fullyQualifiedName="name" identifier="name" declaration="false"/>
        </expression>
      </statements>
      <statements xsi:type="dom:ExpressionStatement">
        <expression xsi:type="dom:Assignment" operator="=">
          <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_parentFiles" identifier="_parentFiles" declaration="false"/>
          <rightHandSide xsi:type="dom:SimpleName" fullyQualifiedName="parentFiles" identifier="parentFiles" declaration="false"/>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="IdeJavaSourceOutputStream" identifier="IdeJavaSourceOutputStream" declaration="false"/>
    <parameters extraDimensions="0" varargs="false">
      <name fullyQualifiedName="env" identifier="env" declaration="true"/>
      <type xsi:type="dom:SimpleType">
        <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeProcessingEnvImpl" identifier="IdeProcessingEnvImpl" declaration="false"/>
      </type>
    </parameters>
    <parameters extraDimensions="0" varargs="false">
      <name fullyQualifiedName="name" identifier="name" declaration="true"/>
      <type xsi:type="dom:SimpleType">
        <name xsi:type="dom:SimpleName" fullyQualifiedName="CharSequence" identifier="CharSequence" declaration="false"/>
      </type>
    </parameters>
    <parameters extraDimensions="0" varargs="false">
      <name fullyQualifiedName="parentFiles" identifier="parentFiles" declaration="true"/>
      <type xsi:type="dom:ParameterizedType">
        <type xsi:type="dom:SimpleType">
          <name xsi:type="dom:SimpleName" fullyQualifiedName="Collection" identifier="Collection" declaration="false"/>
        </type>
        <typeArguments xsi:type="dom:SimpleType">
          <name xsi:type="dom:SimpleName" fullyQualifiedName="IFile" identifier="IFile" declaration="false"/>
        </typeArguments>
      </type>
    </parameters>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:SynchronizedStatement">
        <body>
          <statements xsi:type="dom:IfStatement">
            <expression xsi:type="dom:SimpleName" fullyQualifiedName="_closed" identifier="_closed" declaration="false"/>
            <thenStatement xsi:type="dom:Block">
              <statements xsi:type="dom:ReturnStatement"/>
            </thenStatement>
          </statements>
          <statements xsi:type="dom:ExpressionStatement">
            <expression xsi:type="dom:Assignment" operator="=">
              <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_closed" identifier="_closed" declaration="false"/>
              <rightHandSide xsi:type="dom:BooleanLiteral" booleanValue="true"/>
            </expression>
          </statements>
        </body>
        <expression xsi:type="dom:ThisExpression"/>
      </statements>
      <statements xsi:type="dom:TryStatement">
        <catchClauses>
          <body>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:MethodInvocation">
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="ce" identifier="ce" declaration="false"/>
                <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;Unable to generate type when IdeJavaSourceOutputStream was closed&quot;"/>
                <expression xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
                <name fullyQualifiedName="log" identifier="log" declaration="false"/>
              </expression>
            </statements>
          </body>
          <exception extraDimensions="0" varargs="false">
            <name fullyQualifiedName="ce" identifier="ce" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="CoreException" identifier="CoreException" declaration="false"/>
            </type>
          </exception>
        </catchClauses>
        <body>
          <statements xsi:type="dom:VariableDeclarationStatement">
            <fragments extraDimensions="0">
              <initializer xsi:type="dom:MethodInvocation">
                <expression xsi:type="dom:MethodInvocation">
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="_env" identifier="_env" declaration="false"/>
                  <name fullyQualifiedName="getAptProject" identifier="getAptProject" declaration="false"/>
                </expression>
                <name fullyQualifiedName="getGeneratedFileManager" identifier="getGeneratedFileManager" declaration="false"/>
              </initializer>
              <name fullyQualifiedName="gfm" identifier="gfm" declaration="true"/>
            </fragments>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="GeneratedFileManager" identifier="GeneratedFileManager" declaration="false"/>
            </type>
          </statements>
          <statements xsi:type="dom:VariableDeclarationStatement">
            <fragments extraDimensions="0">
              <initializer xsi:type="dom:MethodInvocation">
                <expression xsi:type="dom:SimpleName" fullyQualifiedName="_env" identifier="_env" declaration="false"/>
                <name fullyQualifiedName="getPhase" identifier="getPhase" declaration="false"/>
              </initializer>
              <name fullyQualifiedName="phase" identifier="phase" declaration="true"/>
            </fragments>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Phase" identifier="Phase" declaration="false"/>
            </type>
          </statements>
          <statements xsi:type="dom:VariableDeclarationStatement">
            <fragments extraDimensions="0">
              <initializer xsi:type="dom:NullLiteral"/>
              <name fullyQualifiedName="result" identifier="result" declaration="true"/>
            </fragments>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="FileGenerationResult" identifier="FileGenerationResult" declaration="false"/>
            </type>
          </statements>
          <statements xsi:type="dom:IfStatement">
            <elseStatement xsi:type="dom:IfStatement">
              <expression xsi:type="dom:InfixExpression" operator="==">
                <leftOperand xsi:type="dom:SimpleName" fullyQualifiedName="phase" identifier="phase" declaration="false"/>
                <rightOperand xsi:type="dom:QualifiedName" fullyQualifiedName="Phase.BUILD">
                  <name fullyQualifiedName="BUILD" identifier="BUILD" declaration="false"/>
                  <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="Phase" identifier="Phase" declaration="false"/>
                </rightOperand>
              </expression>
              <thenStatement xsi:type="dom:Block">
                <statements xsi:type="dom:ExpressionStatement">
                  <expression xsi:type="dom:Assignment" operator="=">
                    <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="result" identifier="result" declaration="false"/>
                    <rightHandSide xsi:type="dom:MethodInvocation">
                      <arguments xsi:type="dom:SimpleName" fullyQualifiedName="_parentFiles" identifier="_parentFiles" declaration="false"/>
                      <arguments xsi:type="dom:MethodInvocation">
                        <expression xsi:type="dom:SimpleName" fullyQualifiedName="_name" identifier="_name" declaration="false"/>
                        <name fullyQualifiedName="toString" identifier="toString" declaration="false"/>
                      </arguments>
                      <arguments xsi:type="dom:MethodInvocation">
                        <expression xsi:type="dom:ThisExpression"/>
                        <name fullyQualifiedName="toString" identifier="toString" declaration="false"/>
                      </arguments>
                      <arguments xsi:type="dom:MethodInvocation">
                        <expression xsi:type="dom:SimpleName" fullyQualifiedName="_env" identifier="_env" declaration="false"/>
                        <name fullyQualifiedName="currentProcessorSupportsRTTG" identifier="currentProcessorSupportsRTTG" declaration="false"/>
                      </arguments>
                      <arguments xsi:type="dom:NullLiteral"/>
                      <expression xsi:type="dom:SimpleName" fullyQualifiedName="gfm" identifier="gfm" declaration="false"/>
                      <name fullyQualifiedName="generateFileDuringBuild" identifier="generateFileDuringBuild" declaration="false"/>
                    </rightHandSide>
                  </expression>
                </statements>
              </thenStatement>
            </elseStatement>
            <expression xsi:type="dom:InfixExpression" operator="==">
              <leftOperand xsi:type="dom:SimpleName" fullyQualifiedName="phase" identifier="phase" declaration="false"/>
              <rightOperand xsi:type="dom:QualifiedName" fullyQualifiedName="Phase.RECONCILE">
                <name fullyQualifiedName="RECONCILE" identifier="RECONCILE" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="Phase" identifier="Phase" declaration="false"/>
              </rightOperand>
            </expression>
            <thenStatement xsi:type="dom:Block"/>
          </statements>
          <statements xsi:type="dom:IfStatement">
            <expression xsi:type="dom:InfixExpression" operator="!=">
              <leftOperand xsi:type="dom:SimpleName" fullyQualifiedName="result" identifier="result" declaration="false"/>
              <rightOperand xsi:type="dom:NullLiteral"/>
            </expression>
            <thenStatement xsi:type="dom:Block">
              <statements xsi:type="dom:ExpressionStatement">
                <expression xsi:type="dom:MethodInvocation">
                  <arguments xsi:type="dom:SimpleName" fullyQualifiedName="result" identifier="result" declaration="false"/>
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="_env" identifier="_env" declaration="false"/>
                  <name fullyQualifiedName="addNewUnit" identifier="addNewUnit" declaration="false"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
      </statements>
    </body>
    <name fullyQualifiedName="close" identifier="close" declaration="true"/>
    <returnType xsi:type="dom:PrimitiveType" code="void"/>
    <thrownExceptions xsi:type="dom:SimpleName" fullyQualifiedName="IOException" identifier="IOException" declaration="false"/>
  </bodyDeclarations>
  <name fullyQualifiedName="IdeJavaSourceOutputStream" identifier="IdeJavaSourceOutputStream" declaration="true"/>
  <superclassType xsi:type="dom:SimpleType">
    <name xsi:type="dom:SimpleName" fullyQualifiedName="ByteArrayOutputStream" identifier="ByteArrayOutputStream" declaration="false"/>
  </superclassType>
</dom:TypeDeclaration>
