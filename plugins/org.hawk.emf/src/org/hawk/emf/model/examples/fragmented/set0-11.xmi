<?xml version="1.0" encoding="ASCII"?>
<dom:TypeDeclaration xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dom="org.amma.dsl.jdt.dom" localTypeDeclaration="false" memberTypeDeclaration="false" packageMemberTypeDeclaration="true" interface="false">
  <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
  <modifiers xsi:type="dom:Modifier" abstract="true" final="false" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ThrowStatement">
        <expression xsi:type="dom:ClassInstanceCreation">
          <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;Deleting a file is not permitted from within an annotation processor&quot;"/>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IllegalStateException" identifier="IllegalStateException" declaration="false"/>
          </type>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="delete" identifier="delete" declaration="true"/>
    <returnType xsi:type="dom:PrimitiveType" code="boolean"/>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ThrowStatement">
        <expression xsi:type="dom:ClassInstanceCreation">
          <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;Generated files are write-only&quot;"/>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IllegalStateException" identifier="IllegalStateException" declaration="false"/>
          </type>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="getCharContent" identifier="getCharContent" declaration="true"/>
    <returnType xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="CharSequence" identifier="CharSequence" declaration="false"/>
    </returnType>
    <parameters extraDimensions="0" varargs="false">
      <name fullyQualifiedName="ignoreEncodingErrors" identifier="ignoreEncodingErrors" declaration="true"/>
      <type xsi:type="dom:PrimitiveType" code="boolean"/>
    </parameters>
    <thrownExceptions xsi:type="dom:SimpleName" fullyQualifiedName="IOException" identifier="IOException" declaration="false"/>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ThrowStatement">
        <expression xsi:type="dom:ClassInstanceCreation">
          <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;Not yet implemented&quot;"/>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="UnsupportedOperationException" identifier="UnsupportedOperationException" declaration="false"/>
          </type>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="getLastModified" identifier="getLastModified" declaration="true"/>
    <returnType xsi:type="dom:PrimitiveType" code="long"/>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ThrowStatement">
        <expression xsi:type="dom:ClassInstanceCreation">
          <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;Opening an input stream on a generated file is not permitted&quot;"/>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IllegalStateException" identifier="IllegalStateException" declaration="false"/>
          </type>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="openInputStream" identifier="openInputStream" declaration="true"/>
    <returnType xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="InputStream" identifier="InputStream" declaration="false"/>
    </returnType>
    <thrownExceptions xsi:type="dom:SimpleName" fullyQualifiedName="IOException" identifier="IOException" declaration="false"/>
  </bodyDeclarations>
  <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
    <modifiers xsi:type="dom:MarkerAnnotation">
      <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
    </modifiers>
    <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
    <body>
      <statements xsi:type="dom:ThrowStatement">
        <expression xsi:type="dom:ClassInstanceCreation">
          <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;Opening a reader on a generated file is not permitted&quot;"/>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IllegalStateException" identifier="IllegalStateException" declaration="false"/>
          </type>
        </expression>
      </statements>
    </body>
    <name fullyQualifiedName="openReader" identifier="openReader" declaration="true"/>
    <returnType xsi:type="dom:SimpleType">
      <name xsi:type="dom:SimpleName" fullyQualifiedName="Reader" identifier="Reader" declaration="false"/>
    </returnType>
    <parameters extraDimensions="0" varargs="false">
      <name fullyQualifiedName="ignoreEncodingErrors" identifier="ignoreEncodingErrors" declaration="true"/>
      <type xsi:type="dom:PrimitiveType" code="boolean"/>
    </parameters>
    <thrownExceptions xsi:type="dom:SimpleName" fullyQualifiedName="IOException" identifier="IOException" declaration="false"/>
  </bodyDeclarations>
  <name fullyQualifiedName="IdeOutputFileObject" identifier="IdeOutputFileObject" declaration="true"/>
  <superInterfaceTypes xsi:type="dom:SimpleType">
    <name xsi:type="dom:SimpleName" fullyQualifiedName="FileObject" identifier="FileObject" declaration="false"/>
  </superInterfaceTypes>
</dom:TypeDeclaration>
